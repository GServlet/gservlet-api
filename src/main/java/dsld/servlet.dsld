/**
 *  Licensed to the Apache Software Foundation (ASF) under one
 *  or more contributor license agreements.  See the NOTICE file
 *  distributed with this work for additional information
 *  regarding copyright ownership.  The ASF licenses this file
 *  to you under the Apache License, Version 2.0 (the
 *  "License"); you may not use this file except in compliance
 *  with the License.  You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing,
 *  software distributed under the License is distributed on an
 *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *  KIND, either express or implied.  See the License for the
 *  specific language governing permissions and limitations
 *  under the License.
 */

// DSL Descriptor for the GServlet API

import org.gservlet.annotation.Servlet
import org.gservlet.annotation.Filter


//@org.gservlet.AbstractServlet

contribute(currentType(annos: annotatedBy(Servlet))) {
	property name : 'logger', type : java.util.Logger, provider : 'org.gservlet.AbstractServlet', doc : 'the logger'
	property name : 'request', type : javax.servlet.http.HttpServletRequest, provider : 'org.gservlet.AbstractServlet', doc : 'the http request'
	property name : 'response', type : javax.servlet.http.HttpServletResponse, provider : 'org.gservlet.AbstractServlet', doc : 'the http response'
	property name : 'session', type : javax.servlet.http.HttpSession, provider : 'org.gservlet.AbstractServlet', doc : 'the http session'
	property name : 'context', type : javax.servlet.ServletContext, provider : 'org.gservlet.AbstractServlet', doc : 'the servlet context'
	property name : 'connection', type : groovy.sql.Sql, provider : 'org.gservlet.AbstractServlet', doc : 'the sql connection'
	property name : 'out', type : java.io.PrintWriter, provider : 'org.gservlet.AbstractServlet', doc : 'the response writer'
	property name : 'html', type : groovy.xml.MarkupBuilder, provider : 'org.gservlet.AbstractServlet', doc : 'the markup builder'
}

contribute(currentType(annos: annotatedBy(Servlet))) {
	delegatesTo type : org.gservlet.AbstractServlet, except : [
		'route',
		'doGet',
		'doPost',
		'doHead',
		'doPut',
		'doTrace',
		'doOptions',
		'doDelete'
	]
}

//@org.gservlet.AbstractFilter

contribute(currentType(annos: annotatedBy(Filter))) {
	property name : 'logger', type : java.util.Logger, provider : 'org.gservlet.AbstractFilter', doc : 'the logger'
	property name : 'request', type : javax.servlet.http.HttpServletRequest, provider : 'org.gservlet.AbstractFilter', doc : 'the http request'
	property name : 'response', type : javax.servlet.http.HttpServletResponse, provider : 'org.gservlet.AbstractFilter', doc : 'the http response'
	property name : 'session', type : javax.servlet.http.HttpSession, provider : 'org.gservlet.AbstractFilter', doc : 'the http session'
	property name : 'context', type : javax.servlet.ServletContext, provider : 'org.gservlet.AbstractFilter', doc : 'the servlet context'
	property name : 'connection', type : groovy.sql.Sql, provider : 'org.gservlet.AbstractFilter', doc : 'the sql connection'
	property name : 'out', type : java.io.PrintWriter, provider : 'org.gservlet.AbstractFilter', doc : 'the response writer'
	property name : 'html', type : groovy.xml.MarkupBuilder, provider : 'org.gservlet.AbstractFilter', doc : 'the markup builder'
}

contribute(currentType(annos: annotatedBy(Filter))) {
	delegatesTo type : org.gservlet.AbstractFilter, except : ['init', 'doFilter']
}